{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_controllers",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_weights",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "addControllers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "controlThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_controller",
						"type": "address"
					}
				],
				"name": "controllerWeight",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "controllersTotalWeight",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct CallsStructs.ExecuteRequest",
						"name": "_executeRequest",
						"type": "tuple"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "execute",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct CallsStructs.ExecuteRequest[]",
						"name": "_executeRequests",
						"type": "tuple[]"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "multiExecute",
				"outputs": [
					{
						"internalType": "bytes[]",
						"name": "",
						"type": "bytes[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct CallsStructs.ExecuteRequest[]",
						"name": "_executeRequests",
						"type": "tuple[]"
					}
				],
				"name": "multiPermittedExecute",
				"outputs": [
					{
						"internalType": "bytes[]",
						"name": "",
						"type": "bytes[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "executor",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct PermissionedCallsStructs.ExecuteRequestPermitted",
						"name": "_executeRequestPermitted",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint64",
								"name": "unlockTimestamp",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "lastExecuteTimestamp",
								"type": "uint64"
							},
							{
								"internalType": "uint32",
								"name": "minExecuteInterval",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "executeCount",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "maxExecutes",
								"type": "uint32"
							}
						],
						"internalType": "struct PermissionedCallsStructs.ExecuteRequestPermission",
						"name": "_executeRequestPermission",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "permitExecute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct CallsStructs.ExecuteRequest",
						"name": "_executeRequest",
						"type": "tuple"
					}
				],
				"name": "permittedExecute",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_controllers",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "removeControllers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "executor",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct PermissionedCallsStructs.ExecuteRequestPermitted",
						"name": "_executeRequestPermitted",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "unpermitExecute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_threshold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "updateControlThreshold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_controller",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_weight",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "bytes[]",
						"name": "_signatures",
						"type": "bytes[]"
					}
				],
				"name": "updateControllerWeight",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/modules/PermissionedCalls/PermissionedCalls.sol": "PermissionedCalls"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
				"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
			"license": "MIT",
			"urls": [
				"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
				"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
				"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
			]
		},
		"contracts/modules/Calls/Calls.sol": {
			"keccak256": "0xc5478621c58526849064aca12935f3d6db2132a5967ca8b2a3829b4e2883a675",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://67248811b738df96df728cf9f504b79d764cab864addabf560e3528580b15f85",
				"dweb:/ipfs/QmawonnCqW1LqaiAvD4f7Kb52wD4rpn88pZdLExBjseDyB"
			]
		},
		"contracts/modules/Calls/CallsStructs.sol": {
			"keccak256": "0x2acd3796110b9e1581bcab7ff6fa437c548be24bf36812fe052c074942a8ebfb",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://838a746ee5551c20ff15a8bae8526edec3a230d8ed395ef405fee8068a2266fe",
				"dweb:/ipfs/QmbMZw2M52sd6Qk9xc1KgmzX2tHkrwRYAQ9Mmt2Bei6Dts"
			]
		},
		"contracts/modules/Calls/ICalls.sol": {
			"keccak256": "0x6fb26b24748a7618773be82d13dee08f7fc72c9c91540484bb2859fd7674f654",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://198e37759699989015568c3c93e97bb43f5434fb22501cca309b00bf9b26d3f1",
				"dweb:/ipfs/QmeFH7nSThS2wpx1zNEgAtknZbHV4arRV34V8NR3Rfi22Q"
			]
		},
		"contracts/modules/Controllers/Controllers.sol": {
			"keccak256": "0xb8423c29712856dc4c5c24bd838862e15e9a7433cb733553c567bd296ef7e859",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://aaf7bfbe07c63343ac7552f54470102922f79d6d443ee8969d0a467d6c2d9100",
				"dweb:/ipfs/QmQeyj4WQzssDhxivKgo6rYMRpHY9dN5viKbtNxJgB2eJL"
			]
		},
		"contracts/modules/Controllers/ControllersStorage.sol": {
			"keccak256": "0x517caf2653cc6235cc64261b2a73664a7b6cc824f279b8a64ec731f09eb9f10b",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://81b4fc31112e2e7407dc2dc9c0da65557fbe3684f71d5047334f9a70394132c6",
				"dweb:/ipfs/QmNS3EKzCvxAHUDPwkEpLWo2eV8GbBYoEVRTMsagC4cme2"
			]
		},
		"contracts/modules/Controllers/IControllers.sol": {
			"keccak256": "0xfbd022e7052fff69e945d4f20c180f355400b972a393e95502bb588eb54d083f",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://165a169357c6d6c6e97843cb8340c28a1aeccbe9b2bc9cec6463445b6622bb72",
				"dweb:/ipfs/QmYNh7jkKeDiewcqoBZAKwR3o7VuJ8JyTTF4jtMxYUhpfD"
			]
		},
		"contracts/modules/PermissionedCalls/IPermissionedCalls.sol": {
			"keccak256": "0xdfe8c32b9714c6d4892f62e97ba33a8639f3119e363eaf9e327ae528cff0ed9c",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://7ed3c4e30d31d07eed6170210d5837501a5e8c1af7653a2765106941b9f615cd",
				"dweb:/ipfs/QmUcvt18h3J5iCcVV6UPME3PZbX1iQoSfc3Ar87fwKb6Fr"
			]
		},
		"contracts/modules/PermissionedCalls/PermissionedCalls.sol": {
			"keccak256": "0xd59f2a029dd134cf8a5afcb1bc4327a0d80c99b77b3c1713cd636859480cdd5e",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://0297b96c41cbc11a1b4d101956064bd1b3e65d48da78a005ae18ff756c827e89",
				"dweb:/ipfs/QmVbTiUfBCWYibCkUXFCP4ShahiwsuU72L3tK2UTmtMVLw"
			]
		},
		"contracts/modules/PermissionedCalls/PermissionedCallsStorage.sol": {
			"keccak256": "0xd0882ee68878d3e2dff6944420afd2dee86d667ce9610ca0201d5f49b6a0648c",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://75ce5985afe6e88385d5fee61524603bb061b84e5b0459440105e9d256c18334",
				"dweb:/ipfs/QmTor7bMUTNxpSKq71E8YfKohGY7hy8vkmY7MjpGeEsSve"
			]
		},
		"contracts/modules/PermissionedCalls/PermissionedCallsStructs.sol": {
			"keccak256": "0xe5696c57bb49be32e78f928d4d274ca49891c8951031b08da8fcd15f2c455d37",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://c2d93be8b8fb807edcb3fdd5b9cb37f69dd8ab105c72d8689bb8958484bdf199",
				"dweb:/ipfs/Qmao5cC88rC6PEZvUKrdpehfKG7vWyLzNixh8xrxMKhekD"
			]
		},
		"contracts/utils/Signatures.sol": {
			"keccak256": "0xf3f74f903db1fd3f4615742e6b96164a61874d8bb10f065a38a3fad4d28c749e",
			"license": "Commons-Clause-1.0",
			"urls": [
				"bzz-raw://71919bffac27831fd5dcc119224260891f630c8b53ca6dc0dac14e2748576b3a",
				"dweb:/ipfs/QmaY87LnPukhAVK3p56RnhSnZoyMcLvVodg9EYRBT3yXf2"
			]
		}
	},
	"version": 1
}